The ``matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

First import ``matrix_divided`` from the ``matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    Divide matrix by 3:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> div = 3
    >>> matrix_divided(matrix, div)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    Divide matrix containing floats:
    >>> matrix = [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
    >>> div = 3
    >>> matrix_divided(matrix, div)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    Matrix contains item(s) other than int/float:
    >>> matrix = [[1, 2, 3], ["string", 5, 6]]
    >>> div = 3
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    Matrix contains different size rows:
    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> div = 3
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    Div is not a number:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> div = "i"
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    Div is 0
    >>> matrix = [[1, 2], [3, 6]]
    >>> div = 0
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
 
    One argument is missing:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    Both arguments are missing:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
